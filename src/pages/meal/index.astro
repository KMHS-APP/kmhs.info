---
import Layout from '../../layouts/Layout.astro';
import ScrollToTopButton from '../../components/ScrollToTopButton.astro';
// noinspection JSUnusedGlobalSymbols
export const prerender = true;
---

<Layout title="Meal Service" description='급식표'>
    <body class="bg-white text-gray-900">
    <h1 class="text-3xl font-bold text-center my-8 text-black dark:text-white">급식 정보</h1>

    <div id="loading-indicator" class="text-center my-8">
        <strong class="text-xl">Loading...</strong>
    </div>

    <div class="max-w-2xl mx-auto mb-4 p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md">
        <h5 class="text-lg text-gray-900 dark:text-gray-100 font-bold text-center">알레르기정보</h5>
        <hr class="my-2 border-gray-300 dark:border-white">
        <p class="text-gray-700 dark:text-gray-300" id="allergy-info" style="display: none;">1.난류<br/>2.우유<br/>3.메밀<br/>4.땅콩<br/>5.대두<br/>6.밀<br/>7.고등어<br/>8.게<br/>9.새우<br/>10.돼지고기<br/>11.복숭아<br/>12.토마토<br/>13.아황산염<br/>14.호두<br/>15.닭고기<br/>16.소고기<br/>17.오징어<br/>18.조개류(굴,전복,홍합 포함)<br/>19.잣</p>
        <div class="text-center my-2">
            <button class="text-blue-500 border border-gray-300 dark:border-gray-600 rounded px-4 py-2" id="show-button" onclick="document.getElementById('allergy-info').style.display = 'block'; this.style.display = 'none'; document.getElementById('hide-button').style.display = 'inline';">더보기</button>
            <button id="hide-button" class="text-blue-500 border border-gray-300 dark:border-gray-600 rounded px-4 py-2" style="display: none;" onclick="document.getElementById('allergy-info').style.display = 'none'; this.style.display = 'none'; document.getElementById('show-button').style.display = 'inline';">접기</button>
        </div>
    </div>

    <div id="today-meal-container" class="max-w-2xl mx-auto mb-4"></div>
    <div id="tomorrow-meal-container" class="max-w-2xl mx-auto mb-4"></div>

    <div class="max-w-2xl mx-auto mb-4 text-center">
        {Array.from({ length: 12 }).map((_, i) => (
                <button
                        id={`month-button-${i + 1}`}
                        class="m-1 p-2 bg-blue-500 text-white rounded"
                >
                    {i + 1}월
                </button>
        ))}
    </div>

    <ul id="meals-list" class="max-w-2xl mx-auto"></ul>

    <ScrollToTopButton />

    <style>
        .cal-info {
            font-weight: bold;
        }
        .menu-info {
            margin-top: 0.5rem;
            white-space: pre-line;
        }
    </style>

    <script>
        async function fetchMeals() {
            const response = await fetch('/api/feeding');
            return await response.json();
        }

        function formatDate(dateString: string) {
            const date = new Date(dateString.slice(0, 4) + '-' + dateString.slice(4, 6) + '-' + dateString.slice(6, 8));
            return date.toLocaleDateString('ko-KR', { year: 'numeric', month: 'long', day: 'numeric' });
        }

        function renderMeal(containerId: string, meal: any, title: string, bgColor: string) {
            const container = document.getElementById(containerId) as HTMLElement;
            if (meal) {
                container.innerHTML = `
                    <div class="max-w-2xl mx-auto mb-4 p-4 ${bgColor} rounded-lg shadow-md">
                        <h2 class="text-2xl font-bold text-center mb-2">${title}</h2>
                        <h5 class="text-lg font-semibold text-gray-900 dark:text-gray-100">${formatDate(meal.MLSV_YMD)}</h5>
                        <p class="cal-info text-gray-700 dark:text-gray-300">&bull; 칼로리: ${meal.CAL_INFO}</p>
                        <hr class="my-2 border-gray-300 dark:border-white">
                        <p class="menu-info text-gray-700 dark:text-gray-300">${meal.DDISH_NM.replace(/<br\/>/g, '<br />').replace(/\(근명\)/g, '')}</p>
                    </div>
                `;
            } else {
                container.innerHTML = `
                    <div class="max-w-2xl mx-auto mb-4 p-4 bg-red-100 dark:bg-red-800 rounded-lg shadow-md">
                        <h2 class="text-2xl font-bold text-center mb-2">${title} 정보가 없습니다</h2>
                        <p class="text-center text-gray-700 dark:text-gray-300">${title} 정보가 제공되지 않았습니다. 다른 날짜를 확인해 주세요.</p>
                    </div>
                `;
            }
        }

        function renderMealsList(meals: any[]) {
            const mealsList = document.getElementById('meals-list') as HTMLElement;
            mealsList.innerHTML = meals.map(meal => `
                <li class="bg-gray-100 dark:bg-gray-800 shadow-md rounded-lg p-4 mb-4" data-month="${new Date(meal.MLSV_YMD.slice(0, 4) + '-' + meal.MLSV_YMD.slice(4, 6) + '-' + meal.MLSV_YMD.slice(6, 8)).getMonth() + 1}">
                    <h5 class="text-lg font-semibold text-gray-900 dark:text-gray-100">${formatDate(meal.MLSV_YMD)}</h5>
                    <p class="cal-info text-gray-700 dark:text-gray-300">&bull; 칼로리: ${meal.CAL_INFO}</p>
                    <hr class="my-2 border-gray-300 dark:border-white">
                    <p class="menu-info text-gray-700 dark:text-gray-300">${meal.DDISH_NM.replace(/<br\/>/g, '<br />').replace(/\(근명\)/g, '')}</p>
                </li>
            `).join('');
        }

        function scrollToMonth(month: number) {
            const eventElement = document.querySelector(`[data-month="${month}"]`);
            if (eventElement) {
                eventElement.scrollIntoView({ behavior: 'smooth' });
            }
        }

        document.addEventListener('DOMContentLoaded', async () => {
            const loadingIndicator = document.getElementById('loading-indicator') as HTMLElement;
            loadingIndicator.style.display = 'block';

            const meals = await fetchMeals();
            loadingIndicator.style.display = 'none';

            const today = new Date();
            const todayString = `${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}${String(today.getDate()).padStart(2, '0')}`;
            //@ts-ignore
            const todayMeal = meals.find(meal => meal.MLSV_YMD === todayString);

            const tomorrow = new Date(today);
            tomorrow.setDate(today.getDate() + 1);
            const tomorrowString = `${tomorrow.getFullYear()}${String(tomorrow.getMonth() + 1).padStart(2, '0')}${String(tomorrow.getDate()).padStart(2, '0')}`;
            //@ts-ignore
            const tomorrowMeal = meals.find(meal => meal.MLSV_YMD === tomorrowString);

            renderMeal('today-meal-container', todayMeal, '오늘의 급식', 'bg-yellow-100 dark:bg-yellow-800');
            renderMeal('tomorrow-meal-container', tomorrowMeal, '내일 급식', 'bg-green-100 dark:bg-green-800');
            renderMealsList(meals);

            Array.from({ length: 12 }, (_, i) => {
                const button = document.getElementById(`month-button-${i + 1}`);
                if (button) {
                    button.addEventListener('click', () => scrollToMonth(i + 1));
                }
            });
        });
    </script>
    </body>
</Layout>
