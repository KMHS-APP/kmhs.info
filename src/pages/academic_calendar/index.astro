---
import Layout from '../../layouts/Layout.astro';
import ScrollToTopButton from '../../components/ScrollToTopButton.astro';
// noinspection JSUnusedGlobalSymbols
export const prerender = true;
---

<Layout title="Academic Calendar" description='학사 일정'>
    <body class="bg-white text-gray-900">
    <h1 class="text-3xl font-bold text-center my-8 text-black dark:text-white">학사일정</h1>

    <!-- Add this loading indicator element in the HTML -->
    <div id="loading-indicator" class="text-center my-8">
        <strong class="text-xl">Loading...</strong>
    </div>

    <!-- Today's Events Section -->
    <div class="max-w-2xl mx-auto mb-4 text-center">
        <h2 class="text-2xl font-semibold mb-2">오늘의 일정</h2>
        <ul id="today-events">
            <li class="bg-gray-100 dark:bg-gray-800 shadow-md rounded-lg p-4 mb-4">
                <strong class="block text-xl">Loading...</strong>
            </li>
        </ul>
    </div>

    <!-- Month Selection Buttons -->
    <div class="max-w-2xl mx-auto mb-4 text-center">
        {Array.from({ length: 12 }).map((_, i) => (
                <button
                        id={`month-button-${i + 1}`}
                        class="m-1 p-2 bg-blue-500 text-white rounded"
                >
                    {i + 1}월
                </button>
        ))}
    </div>

    <ul id="academic-calendar" class="max-w-2xl mx-auto">
        <li class="bg-gray-100 dark:bg-gray-800 shadow-md rounded-lg p-4 mb-4">
            <strong class="block text-xl">Loading...</strong>
        </li>
    </ul>

    <!-- Scroll to Top Button -->
    <ScrollToTopButton />

    <script>
        async function fetchAcademicCalendar() {
            const response = await fetch('/api/academic-calendar');
            return await response.json();
        }

        function getTodayEvents(events: any[]) {
            const today = new Date();
            const todayString = `${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}${String(today.getDate()).padStart(2, '0')}`;
            return events.filter(event => event.AA_YMD === todayString);
        }

        function formatDate(dateString: string) {
            const date = new Date(dateString.slice(0, 4) + '-' + dateString.slice(4, 6) + '-' + dateString.slice(6, 8));
            return date.toLocaleDateString('ko-KR', { year: 'numeric', month: 'long', day: 'numeric' });
        }

        document.addEventListener('DOMContentLoaded', async () => {
            const loadingIndicator = document.getElementById('loading-indicator') as HTMLElement;
            loadingIndicator.style.display = 'block';

            const academicCalendar = await fetchAcademicCalendar();
            loadingIndicator.style.display = 'none';

            const todayEvents = getTodayEvents(academicCalendar);

            const todayEventsContainer = document.getElementById('today-events') as HTMLElement;
            todayEventsContainer.innerHTML = todayEvents.length > 0
                ? todayEvents.map(event => `
                <li class="bg-gray-100 dark:bg-black shadow-md rounded-lg p-4 mb-4">
                    <h5 class="text-lg font-semibold">${formatDate(event.AA_YMD)}</h5>
                    <strong class="block text-xl">${event.EVENT_NM}</strong>${event.EVENT_CNTNT}
                </li>
            `).join('')
                : `<li class="bg-gray-100 dark:bg-black shadow-md rounded-lg p-4 mb-4">
                    <strong class="block text-xl">오늘은 일정이 없습니다.</strong>
                </li>`;

            const academicCalendarContainer = document.getElementById('academic-calendar') as HTMLElement;
            //@ts-ignore
            academicCalendarContainer.innerHTML = academicCalendar.map(event => `
            <li class="bg-gray-100 dark:bg-black shadow-md rounded-lg p-4 mb-4" data-month="${new Date(event.AA_YMD.slice(0, 4) + '-' + event.AA_YMD.slice(4, 6) + '-' + event.AA_YMD.slice(6, 8)).getMonth() + 1}">
                <h5 class="text-lg font-semibold">${formatDate(event.AA_YMD)}</h5>
                <strong class="block text-xl">${event.EVENT_NM}</strong>${event.EVENT_CNTNT}
            </li>
        `).join('');

            Array.from({ length: 12 }, (_, i) => {
                const button = document.getElementById(`month-button-${i + 1}`);
                if (button) {
                    button.addEventListener('click', () => {
                        const eventElement = document.querySelector(`[data-month="${i + 1}"]`);
                        if (eventElement) {
                            eventElement.scrollIntoView({ behavior: 'smooth' });
                        }
                    });
                }
            });
        });
    </script>
    </body>
</Layout>
