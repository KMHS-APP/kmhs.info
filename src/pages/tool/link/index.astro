---
import Layout from "../../../layouts/Layout.astro";
---

<Layout title="링크 단축기" description="링크 단축기 페이지입니다.">
  <h1 class="text-3xl font-bold text-center my-8 text-black dark:text-white">
    링크 단축
  </h1>
  <form
    id="shorten-form"
    class="space-y-4 max-w-2xl mx-auto p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md"
  >
    <div>
      <label
        for="url"
        class="block text-sm font-medium text-gray-700 dark:text-gray-300"
        >URL</label
      >
      <input
        type="url"
        id="url"
        name="url"
        required
        class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
      />
    </div>
    <button
      type="submit"
      class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
      >단축</button
    >
  </form>
  <div
    id="result"
    class="mt-4 text-sm text-gray-700 dark:text-gray-300 text-center"
  >
  </div>
  <canvas id="qrcode" class="mx-auto mt-4"></canvas>
  <a
    id="download-link"
    class="hidden w-full justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mt-4 text-center"
    >QR 코드 다운로드</a
  >

  <script>
    import QRCode from "qrcode";
    const handleSubmit = async (event: SubmitEvent) => {
      event.preventDefault();
      const target = event.target as HTMLFormElement;
      const resultDiv = document.getElementById("result");
      const qrCanvas = document.getElementById("qrcode");
      const downloadLink = document.getElementById("download-link");
      if (!target || !resultDiv || !qrCanvas || !downloadLink) {
        if (resultDiv) {
          resultDiv.innerText = "오류: 폼을 찾을 수 없습니다.";
        }
        return;
      }
      const urlElement = target.elements.namedItem("url");
      if (!urlElement) {
        resultDiv.innerText = "오류: URL 입력 요소를 찾을 수 없습니다.";
        return;
      }
      const url = (urlElement as HTMLInputElement).value;
      resultDiv.innerText = "단축 중...";

      try {
        const response = await fetch("https://link.kmhs.info/shorten", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ url }),
        });

        if (!response.ok) {
          throw new Error("Failed to shorten URL");
        }

        const data = await response.json();
        resultDiv.innerHTML = `단축된 URL: <a href="${data.shortUrl}" class="text-indigo-600 hover:underline">${data.shortUrl}</a>`;

        // QR 코드 생성
        QRCode.toCanvas(qrCanvas, data.shortUrl, function (error) {
          if (error) {
            resultDiv.innerText = `오류: QR 코드 생성 실패`;
            return;
          }
          // QR 코드 다운로드 링크 설정
          (qrCanvas as HTMLCanvasElement).toBlob((blob) => {
            if (blob) {
              const url = URL.createObjectURL(blob);
              const anchor = downloadLink as HTMLAnchorElement;
              anchor.href = url;
              anchor.download = "qrcode.png";
              anchor.classList.remove("hidden");
              anchor.innerText = "QR 코드 다운로드";
            } else {
              resultDiv.innerText = "오류: QR 코드 블롭 생성 실패";
            }
          });
        });
      } catch (err) {
        const errorMessage =
          err instanceof Error ? err.message : "알 수 없는 오류";
        resultDiv.innerText = `오류: ${errorMessage}`;
      }
    };

    document.addEventListener("DOMContentLoaded", () => {
      document
        .getElementById("shorten-form")
        ?.addEventListener("submit", handleSubmit);
    });
  </script>
</Layout>
